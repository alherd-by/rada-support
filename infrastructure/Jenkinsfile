pipeline {
  agent any
  options {
    disableConcurrentBuilds()
  }
  stages {
    stage('Build') {
        agent {
            docker {
                image 'klakegg/hugo:0.74.3-ext-alpine'
                args '--entrypoint=\'\''
            }
        }
        steps {
            sh 'hugo'
            stash includes: 'public/*', name: 'output'
            stash includes: 'infrastructure/*', name: 'infra'
        }
    }
    stage('Deploy') {
        environment {
            SSH_DEPLOY_USER = credentials('SSH_DEPLOY_USER')
            SSH_PRIVATE_KEY  = credentials('SSH_PRIVATE_KEY')
            FRONTEND_HOST   = credentials('FRONTEND_HOST')
        }
        steps {
            unstash 'infra'
            unstash 'output'
            writeFile file: 'infrastructure/hosts', text: """
${FRONTEND_HOST}
            """
            withCredentials(
                [
                sshUserPrivateKey(credentialsId: "SSH_PRIVATE_KEY", keyFileVariable: 'SSH_KEY'),
                string(credentialsId: 'DEPLOY_USER', variable: 'SSH_DEPLOY_USER')
                ]
            ) {
               ansiblePlaybook(
                   playbook: 'infrastructure/ansistrano_deploy.yml',
                   inventory: 'infrastructure/hosts',
                   credentialsId: 'SSH_KEY',
                   hostKeyChecking: false,
                   extraVars: [
                       login: "$DEPLOY_USER",
                   ]
               )
            }
        }
    }
  }
}

